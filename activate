# This file must be used with "source bin/activate" you cannot run it directly

filename="$0"
if [[ -n "${BASH_SOURCE[0]}" ]]; then
  filename="${BASH_SOURCE[0]}"
elif [[ -n "${(%):-%x}" ]]; then
  filename="${(%):-%x}"
fi

if [ -n "${BASH:-}" ]; then
  if [[ $called == $0 ]]; then
    (>&2 echo "This script must be sourced")
    exit 1
  fi
# @TODO: How to check if we're running zsh?
# elif [ -n "${ZSH_VERSION:-}" ] ; then
fi

deactivate () {
  # reset old environment variables
  if [ -n "${_OLD_VIRTUAL_PATH:-}" ] ; then
    PATH="${_OLD_VIRTUAL_PATH:-}"
    export PATH
    unset _OLD_VIRTUAL_PATH
  fi

  # This should detect bash and zsh, which have a hash command that must
  # be called to get it to forget past commands.  Without forgetting
  # past commands the $PATH changes we made may not be respected
  if [ -n "${BASH:-}" ] || [ -n "${ZSH_VERSION:-}" ] ; then
    hash -r
  fi

  if [ -n "${_OLD_VIRTUAL_PS1:-}" ] ; then
    PS1="${_OLD_VIRTUAL_PS1:-}"
    export PS1
    unset _OLD_VIRTUAL_PS1
  fi

  unset VIRTUAL_ENV
  if [ ! "$1" = "nondestructive" ] ; then
    # Self destruct!
    unset -f deactivate
  fi
}

# unset irrelevant variables
deactivate nondestructive

VIRTUAL_ENV=$(cd "$(dirname "$filename")" && pwd)
export VIRTUAL_ENV

_OLD_VIRTUAL_PATH="$PATH"
PATH="$VIRTUAL_ENV/bin:$PATH"
export PATH

if [ -z "${VIRTUAL_ENV_DISABLE_PROMPT:-}" ] ; then
  _OLD_VIRTUAL_PS1="${PS1:-}"
  if [ "x(docker-compose-venv) " != x ] ; then
    PS1="(docker-compose-venv) ${PS1:-}"
  else
    if [ "$(basename "$VIRTUAL_ENV")" = "__" ] ; then
      # special case for Aspen magic directories
      # see http://www.zetadev.com/software/aspen/
      PS1="[$(basename "$(dirname "$VIRTUAL_ENV")")] $PS1"
    else
      PS1="($(basename "$VIRTUAL_ENV"))$PS1"
    fi
  fi
  export PS1
fi

# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "${BASH:-}" ] || [ -n "${ZSH_VERSION:-}" ] ; then
  hash -r
fi

# Local Variables:
# mode: sh
# End:
